syntax = "proto3";

package gnoi.sonic;

//option (types.gnoi_version) = "0.1.0";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;

service SonicService {
  rpc ShowTechsupport (TechsupportRequest) returns (TechsupportResponse) {}
  rpc Sum (SumRequest) returns (SumResponse) {}

  rpc CopyConfig(CopyConfigRequest) returns (CopyConfigResponse) {}

  rpc ImageInstall(ImageInstallRequest) returns (ImageInstallResponse) {}
  rpc ImageRemove(ImageRemoveRequest) returns (ImageRemoveResponse) {}
  rpc ImageDefault(ImageDefaultRequest) returns (ImageDefaultResponse) {}

  rpc Authenticate(AuthenticateRequest) returns (AuthenticateResponse) {}
  rpc Refresh(RefreshRequest) returns (RefreshResponse) {}
  rpc ClearNeighbors(ClearNeighborsRequest) returns (ClearNeighborsResponse) {}
  rpc VlanReplace(VlanReplaceRequest) returns (VlanReplaceResponse) {}

  rpc GetAuditLog (GetAuditLogRequest) returns (GetAuditLogResponse) {}
  rpc ClearAuditLog (ClearAuditLogRequest) returns (ClearAuditLogResponse) {}
}

message SonicOutput {
    int32 status = 1;
    string status_detail = 2 [(gogoproto.jsontag) = "status-detail", (gogoproto.moretags) = "xml:\",comment\""];
}
message TechsupportRequest {
    message Input {
        string date = 1;
    }
    Input input = 1 [(gogoproto.jsontag) = "sonic-show-techsupport:input", (gogoproto.moretags) = "xml:\",comment\""];
}
message TechsupportResponse {
    message Output {
        string output_filename = 1 [(gogoproto.jsontag) = "output-filename", (gogoproto.moretags) = "xml:\",comment\""];
    }
    Output output = 1 [(gogoproto.jsontag) = "sonic-show-techsupport:output", (gogoproto.moretags) = "xml:\",comment\""];
}

message ClearNeighborsRequest {
    message Input {
        bool force = 1;
        string family = 2;
        string ip = 3;
        string ifname = 4;
    }
    Input input = 1 [(gogoproto.jsontag) = "sonic-neighbor:input", (gogoproto.moretags) = "xml:\",comment\""];
}

message ClearNeighborsResponse {
    message Output {
        string response = 1;
    }
    Output output = 1 [(gogoproto.jsontag) = "sonic-neighbor:output", (gogoproto.moretags) = "xml:\",comment\""];
}

message VlanReplaceRequest {
    message Input {
        string ifname = 1;
        string vlanlist = 2;
    }
    Input input = 1 [(gogoproto.jsontag) = "openconfig-interfaces-ext:input", (gogoproto.moretags) = "xml:\",comment\""];
}

message VlanReplaceResponse {
    message Output {
        string response = 1;
    }
    Output output = 1 [(gogoproto.jsontag) = "openconfig-interfaces-ext:output", (gogoproto.moretags) = "xml:\",comment\""];
}

message SumRequest {
    message Input {
        int32 left = 1;
        int32 right = 2;
    }
    Input input = 1 [(gogoproto.jsontag) = "sonic-tests:input", (gogoproto.moretags) = "xml:\",comment\""];
}
message SumResponse {
    message Output {
        int32 result = 1;
    }
    Output output = 1 [(gogoproto.jsontag) = "sonic-tests:output", (gogoproto.moretags) = "xml:\",comment\""];
}


message CopyConfigRequest {
    message Input {
        string source = 1;
        bool overwrite = 2;
        string destination = 3;
    }
    Input input = 1 [(gogoproto.jsontag) = "sonic-config-mgmt:input", (gogoproto.moretags) = "xml:\",comment\""];
}
message CopyConfigResponse {
    SonicOutput output = 1 [(gogoproto.jsontag) = "sonic-config-mgmt:output", (gogoproto.moretags) = "xml:\",comment\""];
}


message ImageInstallRequest {
    message Input {
        string imagename = 2;
    }
    Input input = 1 [(gogoproto.jsontag) = "sonic-image-management:input", (gogoproto.moretags) = "xml:\",comment\""];
}
message ImageInstallResponse {
    SonicOutput output = 1 [(gogoproto.jsontag) = "sonic-image-management:output", (gogoproto.moretags) = "xml:\",comment\""];
}
message ImageRemoveRequest {
    message Input {
        string imagename = 1;
    }
    Input input = 1 [(gogoproto.jsontag) = "sonic-image-management:input", (gogoproto.moretags) = "xml:\",comment\""];
}
message ImageRemoveResponse {
    SonicOutput output = 1 [(gogoproto.jsontag) = "sonic-image-management:output", (gogoproto.moretags) = "xml:\",comment\""];
}
message ImageDefaultRequest {
    message Input {
        string imagename = 1;
    }
    Input input = 1 [(gogoproto.jsontag) = "sonic-image-management:input", (gogoproto.moretags) = "xml:\",comment\""];
}
message ImageDefaultResponse {
    SonicOutput output = 1 [(gogoproto.jsontag) = "sonic-image-management:output", (gogoproto.moretags) = "xml:\",comment\""];
}

message GetAuditLogRequest {
    message Input {
        string content_type = 1 [(gogoproto.jsontag) = "content-type", (gogoproto.moretags) = "xml:\",comment\""];
    }
    Input input = 1 [(gogoproto.jsontag) = "sonic-auditlog:input", (gogoproto.moretags) = "xml:\",comment\""];
}

message GetAuditLogResponse {
    message AuditOutput { 
        repeated string audit_content = 1 [(gogoproto.jsontag) = "audit-content", (gogoproto.moretags) = "xml:\",comment\""];
    }
    AuditOutput output = 1 [(gogoproto.jsontag) = "sonic-get-auditlog:output", (gogoproto.moretags) = "xml:\",comment\""];
}

message ClearAuditLogRequest {
}

message ClearAuditLogResponse {
    SonicOutput output = 1 [(gogoproto.jsontag) = "sonic-clear-auditlog:output", (gogoproto.moretags) = "xml:\",comment\""];
}

message JwtToken {
    string access_token = 1;
    string type = 2;
    int64 expires_in = 3; 
}
message AuthenticateRequest {
    string username = 1;
    string password = 2;
}

message AuthenticateResponse {
    JwtToken Token = 1;
}

message RefreshRequest {
}

message RefreshResponse {
    JwtToken Token = 1;
}
